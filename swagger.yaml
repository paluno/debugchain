swagger: '2.0'
info:
  description: API definition DebugChain project
  version: 1.0.0
  title: DebugChain
host: '???'
basePath: /api
schemes:
  - http
paths:
  /users:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: User was created successfully
          schema:
            $ref: '#/definitions/User'
  '/users/{userId}':
    get:
      tags:
        - user
      summary: Get user by user name
      description: ''
      operationId: getUserByName
      produces:
        - application/xml
        - application/json
      parameters:
        - name: userId
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: integer
      responses:
        '200':
          description: User was returned successfully
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    put:
      tags:
        - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: userId
          in: path
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: User was updated successfully
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
  /issues:
    get:
      tags:
        - issues
      summary: Get all issues
      description: Get all issues which are tracked in the debugchain
      operationId: getIssues
      produces:
        - application/json
      parameters:
        - name: searchterm
          in: query
          description: A searchterm for searching and filtering the issues
          required: false
          type: integer
      responses:
        '200':
          description: Issues were returned successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Issue'
        '404':
          description: No issues found
  '/issues/{issueId}':
    get:
      tags:
        - issues
      summary: Get an issues
      description: Get an issues by id
      operationId: getIssueById
      produces:
        - application/json
      parameters:
        - name: issueId
          in: path
          description: The id of the issue
          required: true
          type: integer
      responses:
        '200':
          description: Issue was returned successfully
          schema:
            $ref: '#/definitions/Issue'
        '404':
          description: No issue with this id found
  '/issues/{issueId}/reviewers':
    get:
      tags:
        - issues
      summary: Get the reviewers of an issue
      description: 'Get the reviewers of an issue, which are assigned for this issue'
      operationId: getIssueReviewers
      produces:
        - application/json
      parameters:
        - name: issueId
          in: path
          description: The id of the issue
          required: true
          type: integer
      responses:
        '200':
          description: Reviewers were returned successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/ProjectReviewer'
        '404':
          description: No reviewers assigned or no issue with this id found
  /projects:
    get:
      tags:
        - projects
      summary: Get all projects
      description: Get all projects which are tracked by a debugchain-contract
      operationId: getProjects
      produces:
        - application/json
      parameters:
        - name: searchterm
          in: query
          description: A searchterm for searching and filtering the projects
          required: false
          type: string
      responses:
        '200':
          description: Projects were returned successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/Project'
        '404':
          description: No issues found
  '/projects/{projectId}':
    get:
      tags:
        - projects
      summary: Get a project
      description: Get a project by id
      operationId: getProjectById
      produces:
        - application/json
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          type: integer
      responses:
        '200':
          description: Project was returned successfully
          schema:
            $ref: '#/definitions/Project'
        '404':
          description: No project with this id found
  '/projects/{projectId}/reviewers':
    get:
      tags:
        - projects
      summary: Get the reviewers of a project
      description: 'Get the reviewers of a project, which are assigned for this project'
      operationId: getProjectReviewers
      produces:
        - application/json
      parameters:
        - name: projectId
          in: path
          description: The id of the project
          required: true
          type: integer
      responses:
        '200':
          description: Reviewers were returned successfully
          schema:
            type: array
            items:
              $ref: '#/definitions/ProjectReviewer'
        '404':
          description: No reviewers assigned or no project with this id found
definitions:
  Issue:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: ID from GitLab
      projectId:
        type: integer
        format: int64
        description: ID from GitLab
      webUrl:
        type: string
        description: GitLab link
      title:
        type: string
      description:
        type: string
      state:
        type: string
        description: GitLab Status
        enum:
          - opened
          - closed
      approve:
        type: boolean
        default: false
      lockedAdress:
        type: string
        description: locked by user with pub-key
      lockedGitLabId:
        type: integer
        format: int64
        description: locked by user with GitLab ID
      complete:
        type: boolean
        default: false
    xml:
      name: Issue
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      email:
        type: string
      token:
        type: string
      adress:
        type: string
        description: ETH pub-key
    xml:
      name: User
  Project:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      description:
        type: string
      visibility:
        type: string
        description: GitLab Status
        enum:
          - public
          - internal
          - private
      maintainer:
        type: integer
        format: int64
      webUrl:
        type: string
      issuesEnabled:
        type: boolean
    xml:
      name: Project
  ProjectReviewer:
    type: object
    properties:
      id:
        type: integer
        format: int64
      projectId:
        type: integer
        format: int64
      userId:
        type: integer
        format: int64
    xml:
      name: ProjectReviewer
  IssueReviewer:
    type: object
    properties:
      id:
        type: integer
        format: int64
      issueId:
        type: integer
        format: int64
      userId:
        type: integer
        format: int64
      state:
        type: string
        description: GitLab Status
        enum:
          - confirmed
          - rejected
          - sentback
    xml:
      name: IssueReviewer
