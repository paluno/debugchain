image: docker:stable
services:
- docker:dind

stages:
  - build
  - package

variables:
  DOCKER_DRIVER: overlay
  CONTAINER_RELEASE_IMAGE_SERVER: snseadam/dc-server
  CONTAINER_RELEASE_IMAGE_WEBAPP: snseadam/dc-webapp

maven-build:
  image: openjdk:8-jdk
  stage: build
  variables:
    MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.defaultLogLevel=info -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true -Dspring.profiles.active=test"
  cache:
    paths:
      - contracts/node_modules
      - webapp/node_modules
      - .m2/repository
  before_script:
    - chmod +x ./mvnw
    - apt-get update > /dev/null
    - apt-get install --no-install-suggests --no-install-recommends -y apt-utils build-essential python > /dev/null
  script:
    - ./mvnw -B compile
    - ./mvnw -B -q -pl :contracts frontend:npm@test-rpc &
    - sleep 5
    - ./mvnw -B install
  artifacts:
      paths:
        - server/target/*.jar
        - webapp/target
      expire_in: 1 week

docker-build:
  stage: package
  script:
    - docker login -u "$dockerHubId" -p "$dockerHubPwd" docker.io
    - docker build -t $CONTAINER_RELEASE_IMAGE_SERVER ./server
    - docker push $CONTAINER_RELEASE_IMAGE_SERVER
    - docker build -t $CONTAINER_RELEASE_IMAGE_WEBAPP ./webapp
    - docker push $CONTAINER_RELEASE_IMAGE_WEBAPP
  only:
    - master

